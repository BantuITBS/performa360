# Generated by Django 5.2.6 on 2025-09-25 12:57

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PerfMgmtKpiDeliDoc",
            fields=[
                (
                    "strategy_code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                ("kpi", models.TextField(blank=True, null=True)),
                (
                    "deliverable",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "doc_evidence",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "strategic_goal",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("goal_type", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "perf_mgmt_kpi_deli_doc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "custom_chat_sessions",
            },
        ),
        migrations.CreateModel(
            name="CompanyLogin",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.CharField(max_length=20)),
                ("company", models.TextField()),
                ("region_branch", models.TextField(blank=True, null=True)),
                ("headquarters", models.TextField()),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("log_out", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "perf_mgmt_company_user_login",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmpExFactorResults",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("employee_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("response", models.IntegerField()),
                (
                    "experience_code",
                    models.CharField(editable=False, max_length=1024, unique=True),
                ),
            ],
            options={
                "verbose_name": "Employee Experience Factor Result",
                "verbose_name_plural": "Employee Experience Factor Results",
                "db_table": "perf_mgmt_empexfactorresults",
            },
        ),
        migrations.CreateModel(
            name="EmpExFactorSetting",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "experience_code",
                    models.CharField(editable=False, max_length=1024, unique=True),
                ),
            ],
            options={
                "verbose_name": "Employee Experience Factor Setting",
                "verbose_name_plural": "Employee Experience Factor Settings",
                "db_table": "perf_mgmt_empexfactorsetting",
            },
        ),
        migrations.CreateModel(
            name="EmployeeExperienceFactor",
            fields=[
                (
                    "factor_type",
                    models.CharField(
                        help_text="Type of employee experience factor", max_length=1550
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the experience factor"
                    ),
                ),
                (
                    "experiencefactor_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Employee Experience Factor",
                "verbose_name_plural": "Employee Experience Factors",
                "db_table": "perf_mgmt_employee_experience_factor",
            },
        ),
        migrations.CreateModel(
            name="EvaluateYourManager",
            fields=[
                (
                    "evaluateyourmanager_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "factor_type",
                    models.CharField(
                        help_text="Type of assessor appraisal factor", max_length=1550
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the factor"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "perf_mgmt_evaluateyourmanager",
            },
        ),
        migrations.CreateModel(
            name="EvaluateYourMgtResults",
            fields=[
                ("employee_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("response", models.IntegerField()),
                ("evaluate_code", models.CharField(editable=False, max_length=1024)),
                (
                    "evaluate_results_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_evaluateyourmgtresults",
            },
        ),
        migrations.CreateModel(
            name="EvaluateYourMgtSetting",
            fields=[
                ("company_code", models.CharField(max_length=255)),
                ("branch_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("feedback_type", models.CharField(max_length=255)),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "change_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "evaluation_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_evaluateyourmgtsetting",
            },
        ),
        migrations.CreateModel(
            name="EvaluateYourPeer",
            fields=[
                (
                    "factor_type",
                    models.CharField(
                        help_text="Type of assessor appraisal factor", max_length=1550
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the factor"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "evaluateyourpeer_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_evaluateyourpeer",
            },
        ),
        migrations.CreateModel(
            name="EvaluateYourPeerResults",
            fields=[
                ("employee_code", models.CharField(max_length=255)),
                ("peer_name", models.TextField()),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("response", models.IntegerField()),
                ("evaluate_code", models.CharField(editable=False, max_length=1024)),
                (
                    "evaluate_results_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_evaluateyourpeerresults",
            },
        ),
        migrations.CreateModel(
            name="EvaluateYourPeerSetting",
            fields=[
                ("company_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "evaluation_code",
                    models.CharField(
                        editable=False,
                        max_length=1024,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_evaluateyourpeersetting",
            },
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("employee_code", models.CharField(max_length=50)),
                ("employee_name", models.CharField(max_length=255)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("duration", models.CharField(blank=True, max_length=20)),
                ("progress", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ManagerSelfEvaluation",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("factor_type", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "self_evaluation_code",
                    models.CharField(editable=False, max_length=1024),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ManagerSelfEvaluationResults",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                (
                    "self_evaluation_setting_code",
                    models.CharField(editable=False, max_length=1024),
                ),
                ("description", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="ManagerSelfEvaluationSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_code", models.CharField(max_length=255)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("factor_type", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "self_evaluation_setting_code",
                    models.CharField(editable=False, max_length=1024),
                ),
            ],
            options={
                "db_table": "perf_mgmt_managerselfevaluationsetting",
            },
        ),
        migrations.CreateModel(
            name="PerfMgmtAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("employee_code", models.CharField(max_length=150)),
                ("assessor_employee_code", models.CharField(max_length=150)),
                ("date_self_appraisal_completed", models.DateTimeField()),
                ("date_assessor_appraisal_completed", models.DateTimeField()),
                ("strategic_goal", models.CharField(max_length=255)),
                ("kpi", models.CharField(max_length=255)),
                ("deliverable", models.CharField(max_length=255)),
                ("deliverable_self_score", models.IntegerField()),
                ("deliverable_assessor_score", models.IntegerField(null=True)),
                ("doc_evidence", models.CharField(max_length=255)),
                ("doc_evidence_self_confirmation", models.BooleanField()),
                ("doc_evidence_assessor_confirmation", models.BooleanField()),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now_add=True)),
                (
                    "attachment_url",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                (
                    "assessment_code",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                (
                    "strategic_goal_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("kpi_number", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "deliverable_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "doc_evidence_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "strategic_goal_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "kpi_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "deliverable_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "doc_evidence_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("short_term_target", models.FloatField(blank=True, null=True)),
                ("intermediate_term_target", models.FloatField(blank=True, null=True)),
                ("long_term_target", models.FloatField(blank=True, null=True)),
                ("uom", models.CharField(blank=True, max_length=50, null=True)),
                ("short_term_actual", models.FloatField(blank=True, null=True)),
                ("intermediate_term_actual", models.FloatField(blank=True, null=True)),
                ("long_term_actual", models.FloatField(blank=True, null=True)),
                ("short_term_target_due_date", models.DateField(blank=True, null=True)),
                (
                    "intermediate_term_target_due_date",
                    models.DateField(blank=True, null=True),
                ),
                ("long_term_target_due_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "perf_mgmt_assessment",
            },
        ),
        migrations.CreateModel(
            name="PersonalDevelopmentPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("course_programme", models.CharField(max_length=150)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("employee_code", models.CharField(max_length=50, unique=True)),
                (
                    "completion_status",
                    models.IntegerField(
                        help_text="Completion percentage (0 to 100)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "institution",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("appraisal_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Personal Development Plan",
                "verbose_name_plural": "Personal Development Plans",
                "db_table": "perf_mgmt_pdp",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("department_name", models.CharField(max_length=255)),
                ("role_name", models.CharField(max_length=255)),
                ("industry", models.CharField(max_length=255)),
                (
                    "role_code",
                    models.CharField(editable=False, max_length=1024, unique=True),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "perf_mgmt_role",
            },
        ),
        migrations.CreateModel(
            name="SGSKPIsDelDev",
            fields=[
                (
                    "strategy_code_results",
                    models.CharField(
                        max_length=2255, primary_key=True, serialize=False
                    ),
                ),
                ("employee_code", models.CharField(max_length=14)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("kpi", models.TextField()),
                ("deliverable", models.TextField()),
                ("doc_evidence", models.TextField(blank=True, null=True)),
                ("strategic_goal", models.TextField(blank=True, null=True)),
                ("date_modified", models.DateField(auto_now=True)),
                (
                    "strategic_goal_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("strategic_goal_due_date", models.DateField(blank=True, null=True)),
                (
                    "kpi_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("kpi_due_date", models.DateField(blank=True, null=True)),
                (
                    "deliverable_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("deliverable_due_date", models.DateField(blank=True, null=True)),
                (
                    "doc_evidence_weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("doc_evidence_due_date", models.DateField(blank=True, null=True)),
                (
                    "strategic_goal_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("kpi_number", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "deliverable_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "doc_evidence_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("goal_type", models.TextField(blank=True, null=True)),
                ("goal_type_number", models.IntegerField(blank=True, null=True)),
                (
                    "review_cycle_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("short_term_target", models.FloatField(blank=True, null=True)),
                ("intermediate_term_target", models.FloatField(blank=True, null=True)),
                ("long_term_target", models.FloatField(blank=True, null=True)),
                ("uom", models.CharField(blank=True, max_length=50, null=True)),
                ("short_term_actual", models.FloatField(blank=True, null=True)),
                ("intermediate_term_actual", models.FloatField(blank=True, null=True)),
                ("long_term_actual", models.FloatField(blank=True, null=True)),
                ("short_term_target_due_date", models.DateField(blank=True, null=True)),
                (
                    "intermediate_term_target_due_date",
                    models.DateField(blank=True, null=True),
                ),
                ("long_term_target_due_date", models.DateField(blank=True, null=True)),
                (
                    "long_term_required_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=50, null=True
                    ),
                ),
                (
                    "medium_term_required_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=50, null=True
                    ),
                ),
                (
                    "short_term_required_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=50, null=True
                    ),
                ),
                ("high_priority", models.TextField(blank=True, null=True)),
                ("low_priority", models.TextField(blank=True, null=True)),
                ("lowest_priority", models.TextField(blank=True, null=True)),
                ("secondary_department", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "perf_mgmt_sgs_kpis_del_dev",
            },
        ),
        migrations.CreateModel(
            name="UoM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("symbol", models.CharField(max_length=10)),
                ("description", models.TextField(blank=True)),
                ("category", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="UserLogin",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.TextField()),
                ("company", models.TextField()),
                ("employee_code", models.CharField(max_length=100)),
                ("region_branch", models.TextField(blank=True, null=True)),
                ("headquarters", models.TextField()),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("company_code", models.TextField()),
                ("region_code", models.TextField(blank=True, null=True)),
                ("log_out", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "perf_mgmt_user_login",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "company_code",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("is_multiple_branches", models.BooleanField(default=False)),
                ("company", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=255)),
                ("headquarters", models.CharField(max_length=255)),
                ("date_created", models.DateField(auto_now_add=True)),
                ("time_created", models.TimeField(auto_now_add=True)),
                (
                    "activity_status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=8,
                    ),
                ),
                ("user_select", models.IntegerField(blank=True, null=True)),
                ("start_date", models.DateField(default=datetime.date(2025, 2, 12))),
                ("end_date", models.DateField(default=datetime.date(2025, 2, 12))),
                (
                    "review_cycle",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("review_number", models.IntegerField(blank=True, null=True)),
                (
                    "payment_plan",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "current_usd_exchange_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(blank=True, max_length=10, null=True)),
                ("email", models.TextField()),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("company_address", models.TextField(blank=True, null=True)),
                (
                    "industry",
                    models.CharField(
                        blank=True, default="n/a", max_length=255, null=True
                    ),
                ),
                ("partner_code", models.CharField(blank=True, max_length=8, null=True)),
                (
                    "total_payable_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "installment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_userprofile",
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sender",
                    models.CharField(
                        choices=[("user", "User"), ("bot", "Bot")], max_length=50
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="perf_mgmt.chatsession",
                    ),
                ),
            ],
            options={
                "db_table": "custom_chat_messages",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("employee_code", models.CharField(max_length=100)),
                ("employee_name", models.CharField(max_length=255)),
                ("course_name", models.CharField(max_length=255)),
                ("institution", models.CharField(max_length=255)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("duration", models.CharField(blank=True, max_length=50)),
                ("progress", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "unique_together": {("employee_code", "course_name")},
            },
        ),
        migrations.CreateModel(
            name="AIRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("employee_code", models.CharField(max_length=50)),
                ("performance_recommendation", models.TextField()),
                ("upskilling_recommendation", models.TextField()),
                ("engagement_recommendation", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assessment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="perf_mgmt.perfmgmtassessment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StrategicGoals",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.CharField(max_length=255)),
                ("goal_type", models.CharField(max_length=100)),
                ("strategic_goal", models.TextField()),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("employee_code", models.CharField(max_length=50)),
                ("region_code", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "goal_activity",
                    models.CharField(
                        choices=[("current", "Current"), ("outdated", "Outdated")],
                        default="current",
                        max_length=10,
                    ),
                ),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "lead_department",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("sector", models.CharField(blank=True, max_length=255, null=True)),
                ("short_term_target", models.FloatField(blank=True, null=True)),
                ("intermediate_term_target", models.FloatField(blank=True, null=True)),
                ("long_term_target", models.FloatField(blank=True, null=True)),
                ("short_term_actual", models.FloatField(blank=True, null=True)),
                ("intermediate_term_actual", models.FloatField(blank=True, null=True)),
                ("long_term_actual", models.FloatField(blank=True, null=True)),
                ("uom", models.CharField(blank=True, max_length=50, null=True)),
                ("short_term_target_due_date", models.DateField(blank=True, null=True)),
                (
                    "intermediate_term_target_due_date",
                    models.DateField(blank=True, null=True),
                ),
                ("long_term_target_due_date", models.DateField(blank=True, null=True)),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "region_branch",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "strategy_code",
                    models.CharField(editable=False, max_length=1024, unique=True),
                ),
                (
                    "long_term_required_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=50, null=True
                    ),
                ),
                (
                    "medium_term_required_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=50, null=True
                    ),
                ),
                (
                    "short_term_required_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=50, null=True
                    ),
                ),
                ("high_priority", models.TextField(blank=True, null=True)),
                ("low_priority", models.TextField(blank=True, null=True)),
                ("lowest_priority", models.TextField(blank=True, null=True)),
                ("secondary_department", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "perf_mgmt_strategic_goals",
                "constraints": [
                    models.UniqueConstraint(
                        fields=(
                            "company_code",
                            "goal_type",
                            "strategic_goal",
                            "department",
                        ),
                        name="unique_strategy_code",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "region_code",
                    models.CharField(
                        max_length=255, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("region_branch", models.TextField()),
                ("user_select", models.IntegerField(default=0)),
                (
                    "created_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "company_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="perf_mgmt.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserCreationModel",
            fields=[
                (
                    "employee_code",
                    models.CharField(max_length=14, primary_key=True, serialize=False),
                ),
                ("pre_existing_employee_code", models.TextField()),
                ("first_name", models.TextField()),
                ("last_name", models.TextField()),
                ("employee_name", models.TextField()),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("team_or_division", models.TextField()),
                ("date_created", models.DateField(auto_now_add=True)),
                ("time_created", models.TimeField(auto_now_add=True)),
                ("employee_email", models.EmailField(max_length=254)),
                ("phone_number", models.TextField()),
                ("employee_gender", models.TextField()),
                ("region_branch", models.TextField(blank=True, null=True)),
                (
                    "employment_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Permanent", "Permanent"),
                            ("Contract", "Contract"),
                            ("Intern", "Intern"),
                            ("Part-Time", "Part-Time"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "employee_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("HR Manager", "HR Manager"),
                            ("International Executive", "International Executive"),
                            ("Staff", "Staff"),
                            ("Department Manager", "Department Manager"),
                            ("General Manager", "General Manager"),
                            ("Company Executive", "Company Executive"),
                            ("Region Executive", "Region Executive"),
                            ("Country Executive", "Country Executive"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("department", models.TextField()),
                ("position", models.TextField()),
                ("reports_to_position", models.TextField()),
                ("is_employee_active", models.BooleanField(default=True)),
                ("reason_for_inactivity", models.TextField(default="n/a")),
                ("reports_to", models.TextField()),
                ("employment_start_date", models.DateField()),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "reports_to_code",
                    models.CharField(
                        blank=True, editable=False, max_length=14, null=True
                    ),
                ),
                (
                    "assign_admin_role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("dpt", "Department Admin"),
                            ("cpy", "Company Admin"),
                            ("hra", "HR Admin"),
                            ("gma", "General Manager Admin"),
                            ("", "n/a"),
                        ],
                        default="n/a",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "region_code",
                    models.ForeignKey(
                        blank=True,
                        db_column="region_code",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="perf_mgmt.region",
                    ),
                ),
                (
                    "company_code",
                    models.ForeignKey(
                        db_column="company_code",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_creation_models",
                        to="perf_mgmt.userprofile",
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_user_creation_model",
            },
        ),
        migrations.CreateModel(
            name="AppraisalMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sender", models.CharField(db_column="sender_id", max_length=32)),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "unique_chat",
                    models.CharField(db_index=True, editable=False, max_length=132),
                ),
                (
                    "chat_type",
                    models.CharField(
                        blank=True, default="text", max_length=2255, null=True
                    ),
                ),
                ("attachment_url", models.URLField(blank=True, null=True)),
                (
                    "sender_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "recipient_name",
                    models.CharField(blank=True, max_length=1255, null=True),
                ),
                (
                    "strategic_goal",
                    models.CharField(
                        blank=True, default="N/A", max_length=1255, null=True
                    ),
                ),
                (
                    "kpi",
                    models.CharField(
                        blank=True, default="N/A", max_length=2255, null=True
                    ),
                ),
                (
                    "deliverable",
                    models.CharField(
                        blank=True, default="N/A", max_length=2255, null=True
                    ),
                ),
                (
                    "deliverable_number",
                    models.CharField(
                        blank=True, default="N/A", max_length=50, null=True
                    ),
                ),
                (
                    "deliverable_id",
                    models.CharField(blank=True, max_length=2255, null=True),
                ),
                (
                    "message_id",
                    models.CharField(
                        blank=True, editable=False, max_length=255, null=True
                    ),
                ),
                (
                    "receiver",
                    models.ForeignKey(
                        db_column="receiver_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_appraisal_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        db_column="reply_to_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="perf_mgmt.appraisalmessage",
                    ),
                ),
            ],
            options={
                "db_table": "perf_mgmt_appraisal_messages",
                "ordering": ["timestamp"],
                "indexes": [
                    models.Index(
                        fields=["sender", "receiver"],
                        name="perf_mgmt_a_sender__854042_idx",
                    ),
                    models.Index(
                        fields=["receiver", "sender"],
                        name="perf_mgmt_a_receive_bcc9c8_idx",
                    ),
                    models.Index(
                        fields=["unique_chat"], name="perf_mgmt_a_unique__fdcc9c_idx"
                    ),
                    models.Index(
                        fields=["reply_to"], name="perf_mgmt_a_reply_t_f5dca3_idx"
                    ),
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("sender", models.F("receiver_id")), _negated=True
                        ),
                        name="prevent_self_messaging_appraisal",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ReviewPeriod",
            fields=[
                ("company", models.CharField(max_length=255)),
                ("review", models.IntegerField()),
                ("period_start_date", models.DateField()),
                ("period_end_date", models.DateField()),
                ("date_created", models.DateTimeField()),
                (
                    "company_review_code",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                (
                    "company_code",
                    models.ForeignKey(
                        db_column="company_code",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="perf_mgmt.userprofile",
                    ),
                ),
            ],
            options={
                "db_table": "review_periods",
                "unique_together": {("company_code", "review")},
            },
        ),
    ]
